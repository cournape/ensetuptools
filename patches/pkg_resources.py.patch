27,41d26
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
64,82d48
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
314,328d279
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
359,369d309
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
613,615d552
< 
< 
< 
649,656d585
< 
< 
< 
< 
< 
< 
< 
< 
820d748
< 
892,902d819
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
928,943d844
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
966,984d866
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
1102,1107d983
< 
< 
< 
< 
< 
< 
1227,1230d1102
< 
< 
< 
< 
1270,1271d1141
< 
< 
1415,1435d1284
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
1464,1476d1312
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
2090,2092d1925
< 
< 
< 
2201,2215d2033
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
2258,2259c2076,2077
<         if self.key=='setuptools':
<             return      # ignore the inevitable setuptools self-conflicts  :(
---
>         if self.key=='enstaller':
>             return      # ignore the inevitable enstaller self-conflicts  :(
2407,2420d2224
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
< 
*** setuptools-0.6c9/pkg_resources.py	2008-09-24 12:10:45.000000000 -0500
--- Enstaller/pkg_resources.py	2008-11-11 11:50:51.000000000 -0600
***************
*** 24,44 ****
  from os import open as os_open
  
  
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
  def get_supported_platform():
      """Return this platform's maximum compatible version.
  
--- 24,29 ----
***************
*** 61,85 ****
      return plat
  
  
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
  __all__ = [
      # Basic resource access and distribution/entry point discovery
      'require', 'run_script', 'get_provider',  'get_distribution',
--- 46,51 ----
***************
*** 311,331 ****
  
  
  
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
  class IResourceProvider(IMetadataProvider):
      """An object that provides access to package resources"""
  
--- 277,282 ----
***************
*** 356,372 ****
  
  
  
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
  class WorkingSet(object):
      """A collection of active distributions on sys.path (or a similar list)"""
  
--- 307,312 ----
***************
*** 610,618 ****
          return distributions, error_info
  
  
- 
- 
- 
      def require(self, *requirements):
          """Ensure that distributions matching `requirements` are activated
  
--- 550,555 ----
***************
*** 646,659 ****
  
  
  
- 
- 
- 
- 
- 
- 
- 
- 
  class Environment(object):
      """Searchable snapshot of distributions on a search path"""
  
--- 583,588 ----
***************
*** 817,823 ****
  
  
  
- 
  class ResourceManager:
      """Manage resource extraction and packages"""
      extraction_path = None
--- 746,751 ----
***************
*** 889,905 ****
  
  
  
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
      def get_cache_path(self, archive_name, names=()):
          """Return absolute location in cache for `archive_name` and `names`
  
--- 817,822 ----
***************
*** 925,946 ****
  
  
  
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
      def postprocess(self, tempname, filename):
          """Perform any platform-specific postprocessing of `tempname`
  
--- 842,847 ----
***************
*** 963,987 ****
  
  
  
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
      def set_extraction_path(self, path):
          """Set the base path where resources will be extracted to, if needed.
  
--- 864,869 ----
***************
*** 1099,1110 ****
      return name.replace('-','_')
  
  
- 
- 
- 
- 
- 
- 
  class NullProvider:
      """Try to implement resources and metadata for arbitrary PEP 302 loaders"""
  
--- 981,986 ----
***************
*** 1224,1233 ****
              path, base = os.path.split(path)
  
  
- 
- 
- 
- 
  class DefaultProvider(EggProvider):
      """Provides access to package resources in the filesystem"""
  
--- 1100,1105 ----
***************
*** 1267,1274 ****
  empty_provider = EmptyProvider()
  
  
- 
- 
  class ZipProvider(EggProvider):
      """Resource support for zips and eggs"""
  
--- 1139,1144 ----
***************
*** 1412,1438 ****
  
  
  
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
  class FileMetadata(EmptyProvider):
      """Metadata handler for standalone PKG-INFO files
  
--- 1282,1287 ----
***************
*** 1461,1479 ****
  
  
  
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
  class PathMetadata(DefaultProvider):
      """Metadata provider for egg directories
  
--- 1310,1315 ----
***************
*** 2087,2095 ****
                  )
      version = property(version)
  
- 
- 
- 
      #@property
      def _dep_map(self):
          try:
--- 1923,1928 ----
***************
*** 2198,2218 ****
  
  
  
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
      def insert_on(self, path, loc = None):
          """Insert self.location in path before its nearest parent directory"""
  
--- 2031,2036 ----
***************
*** 2255,2262 ****
  
  
      def check_version_conflict(self):
!         if self.key=='setuptools':
!             return      # ignore the inevitable setuptools self-conflicts  :(
  
          nsp = dict.fromkeys(self._get_metadata('namespace_packages.txt'))
          loc = normalize_path(self.location)
--- 2073,2080 ----
  
  
      def check_version_conflict(self):
!         if self.key=='enstaller':
!             return      # ignore the inevitable enstaller self-conflicts  :(
  
          nsp = dict.fromkeys(self._get_metadata('namespace_packages.txt'))
          loc = normalize_path(self.location)
***************
*** 2404,2423 ****
  
  
  
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
- 
  class Requirement:
      def __init__(self, project_name, specs, extras):
          """DO NOT CALL THIS UNDOCUMENTED METHOD; use Requirement.parse()!"""
--- 2222,2227 ----
